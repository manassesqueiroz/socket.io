generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Address       Address[]
  Class         Class[]
  sessions      Session[]
   RoomUser      RoomUser[]
  Message       Message[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Address {
  id        String  @id @default(uuid())
  latitude  String?
  longitude String?
  userId    String
  User      User    @relation(fields: [userId], references: [id])
}

model Class {
  id            String    @id @default(uuid())
  name          String?
  password      String?
  emailVerified DateTime?
  image         String?
  admin         String
  User          User      @relation(fields: [admin], references: [id])
}

model Room {
  id          String     @id @default(uuid())
  roomName    String
  description String?
  messages    Message[]
  RoomUser    RoomUser[]
}

model RoomUser {
  userId String
  roomId String
  user   User   @relation(fields: [userId], references: [id])
  room   Room   @relation(fields: [roomId], references: [id])

  @@id([userId, roomId])
}

model Message {
  id             String   @id @default(uuid())
  roomId         String
  userId         String
  messageContent String
  timestamp      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])
  room           Room     @relation(fields: [roomId], references: [id])
}
